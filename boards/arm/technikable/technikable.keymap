/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,matrix_transform =
                       &ortho_transform;
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
	tri_layer {
	    if-layers = <NAV_L NUM_L>;
	    then-layer = <SYM_L>;
	};
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
 &kp ESC    &kp Q      &kp W      &kp F       &kp P          &kp G          &kp J            &kp L          &kp U       &kp Y      &kp SEMI     &kp BKSP
 &kp LSHFT  &kp A      &kp R      &kp S       &kp T          &kp D          &kp H            &kp N          &kp E       &kp I      &kp O        &kp QUOT
 &kp TAB    &kp Z      &kp X      &kp C       &kp V          &kp B          &kp K            &kp M          &kp COMMA   &kp DOT    &kp FSLH     &kp RET
                       &kp LGUI   &kp LALT    &kp LCTRL      &mo NAV_L      &kp SPACE        &mo NUM_L      &kp RALT    &kp RSHFT
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&trans     &trans     &trans     &trans      &kp GRAVE       &trans       &trans     &kp MINUS      &kp EQUAL   &trans     &kp INS    &kp DEL
&trans     &trans     &trans     &kp LBRC    &kp LBKT        &kp LPAR     &kp LARW   &kp DARW       &kp UARW    &kp RARW   &trans     &trans
&trans     &trans     &trans     &kp RBRC    &kp RBKT        &kp RPAR     &kp HOME   &kp PG_DN      &kp PG_UP   &kp END    &kp BSLH   &trans
                      &trans     &trans      &trans          &trans       &trans     &trans         &trans      &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&trans     &trans     &kp N7     &kp N8      &kp N9    &trans      &trans        &trans         &trans       &trans       &trans     &trans
&trans     &trans     &kp N4     &kp N5      &kp N6    &kp N0      &trans        &trans         &trans       &trans       &trans     &trans
&trans     &trans     &kp N1     &kp N2      &kp N3    &trans      &trans        &trans         &trans       &trans       &trans     &trans
                      &trans     &trans      &trans    &trans      &trans        &trans         &trans       &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&kp F1     &kp F2     &kp F3     &kp F4      &kp F5       &kp F6       &kp F7     &kp F8    &kp F9       &kp F10      &kp F11    &kp F12
&trans     &trans     &trans     &trans      &trans       &trans       &trans     &trans    &trans       &trans       &trans     &trans
&trans     &trans     &trans     &trans      &trans       &trans       &trans     &trans    &trans       &trans       &trans     &trans
                      &trans     &trans      &trans       &trans       &trans     &trans    &trans       &trans
            >;
        };

    };
};

